(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (systray
      :class "right"
      :spacing 10
      :icon-size 16
      :prepend-new true
      )
    (network)
    (metric :label {mute == "no" ? "" : "󰝟"}
      :value volume
      :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
      :switch showvol
      :switchname "showvol"
      :action "pactl set-sink-mute @DEFAULT_SINK@ toggle")
    (metric :label "󰍛"
      :value {EWW_RAM.used_mem_perc}
      :onchange ""
      :switch showmem
      :switchname "showmem"
      :action "")
    (battery)
    (time)
    )
)

(defwidget time []
  (box :orientation "h" :space-evenly false
    :tooltip date
    clock)
)

(defwidget battery []
  (box
    :class "${bat_per < 15 ? "lowbat" : ""} ${bat_state == "Charging" ? "xlarge" : ""} label"
    :visible { bat_state == "none" ? false : true }
    :tooltip {bat_state == "none" ? "N/A" : "${bat_per}%"}
    "${bat_state == "Charging" ?
      bat_per < 5 ? "󰢟" :
      bat_per < 15 ? "󰢜" :
      bat_per < 25 ? "󰂆" :
      bat_per < 35 ? "󰂇" :
      bat_per < 45 ? "󰂈" :
      bat_per < 55 ? "󰢝" :
      bat_per < 65 ? "󰂉" :
      bat_per < 75 ? "󰢞" :
      bat_per < 85 ? "󰂊" :
      bat_per < 95 ? "󰂋" :
      "󰂅" :
      bat_per < 5 ? "󰂎" :
      bat_per < 15 ? "󰁺" :
      bat_per < 25 ? "󰁻" :
      bat_per < 35 ? "󰁼" :
      bat_per < 45 ? "󰁽" :
      bat_per < 55 ? "󰁾" :
      bat_per < 65 ? "󰁿" :
      bat_per < 75 ? "󰂀" :
      bat_per < 85 ? "󰂁" :
      bat_per < 95 ? "󰂂" :
      "󰁹"
    }"
  )
)

(defwidget network []
    (eventbox
        :onclick {"nm-connection-editor&"}
        :tooltip if_ad
        (box :orientation "h" :space-evenly false
          (box :class "label xlarge" "󰈀")
        )
    )
)

(defwindow netinfo []
    :monitor i
   :geometry (geometry :x "50%"
       :y "20px"
       :width "90%"
       :height "30px"
       :anchor "top center")
   :stacking "fg"
   :reserve (struts :distance "40px" :side "top")
   :windowtype "dock"
   :wm-ignore false
        (box :orientation "h" :space-evenly false
          (box :class "medium tooltip" if_ad)
        )
  )

(defwidget metric [label value onchange switch switchname action]
    (eventbox
    :onhover "eww update ${switchname}=true"
    :onhoverlost "eww update ${switchname}=false"
        (box :orientation "h"
        :class "metric"
        :space-evenly false
            (revealer
            :transition "slideleft"
            :reveal switch
            :duration "300ms"
                (scale :min 0
                :max 100
                :active {onchange != ""}
                :value value
                :onchange onchange
            ))
            (eventbox :onclick action
                (box :class "label xlarge" label))
        ))
)

(defpoll volume :interval "1s"
  "bash ~/.config/eww/scripts/getvol")
(defpoll mute :interval "1s"
    "LANG=en_US.UTF-8 pactl get-sink-mute @DEFAULT_SINK@ | awk '{print $2}'")

(defpoll clock :interval "1s"
  "date '+%H:%M:%S'")
(defpoll date :interval "60s"
    "date '+%a %b %d, %Y'")

(defpoll if_ad :interval "3s"
  "bash ~/.config/eww/scripts/get-network")

(defpoll bat_state :interval "30s"
    "bash ~/.config/eww/scripts/get-battery state")
(defpoll bat_per :interval "30s"
    "bash ~/.config/eww/scripts/get-battery percent")

(defvar showmem false)
(defvar showvol false)
